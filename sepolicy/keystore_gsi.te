# SELinux policy for GSI Clean dummy keystore2 implementation
# This extends the base keystore policy with GSI-specific permissions

# Basic keystore domain permissions (inherited from system policy)
# Additional permissions needed for dummy keystore2 implementation

# Allow keystore to access its data directory
allow keystore keystore_data_file:dir rw_dir_perms;
allow keystore keystore_data_file:file create_file_perms;

# Allow keystore to write logs (dummy implementation logs status)
allow keystore kmsg_device:chr_file w_file_perms;

# Allow keystore to set service properties (dummy sets init.svc.keystore2)
set_prop(keystore, system_prop)
set_prop(keystore, init_service_status_prop)

# Allow keystore to access /data/misc/keystore directory
allow keystore keystore_data_file:dir create_dir_perms;
allow keystore keystore_data_file:file create_file_perms;

# Allow keystore to sleep/pause (dummy implementation sleeps)
allow keystore self:capability { sys_nice };

# Allow basic file operations for dummy keystore
allow keystore tmpfs:file { read write };

# Allow keystore to access vendor keystore directories (GSI compatibility)
allow keystore vendor_data_file:dir create_dir_perms;
allow keystore vendor_data_file:file create_file_perms;

# Allow keystore to interact with init (service lifecycle)
allow keystore init:unix_stream_socket connectto;

# GSI-specific: Allow keystore to work without hardware TEE
# (dummy implementation doesn't use TEE but needs basic permissions)
dontaudit keystore tee_device:chr_file *;
dontaudit keystore ion_device:chr_file *;

# Allow keystore to access basic system files needed for GSI operation
allow keystore proc_version:file r_file_perms;
allow keystore proc_cmdline:file r_file_perms;

# Allow keystore to create and manage its database files
allow keystore keystore_data_file:file { create_file_perms relabelfrom };


